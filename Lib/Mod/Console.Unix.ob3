MODULE Console;  (* J. Templ, 29-June-96 *)

  (* output to Unix/Windows standard output device StdOut *)

  IMPORT SYSTEM, Platform;

  VAR
    line: ARRAY 128 OF CHAR; pos: INTEGER;

  PROCEDURE Flush;
    VAR error: Platform.ErrorCode;
  BEGIN
    error := Platform.Write(Platform.StdOut, SYSTEM.ADR(line), pos);
    pos := 0;
  END Flush;

  PROCEDURE WriteCh* (ch: CHAR);
  BEGIN
    IF pos = LEN(line) THEN Flush() END;
    line[pos] := ch; INC(@pos);
    IF ch = 0AX THEN Flush() END;
  END WriteCh;

  PROCEDURE WriteStr* (s: ARRAY OF CHAR);
    VAR i: INTEGER;
  BEGIN i := 0;
    WHILE s[i] # 0X DO WriteCh(s[i]); INC(@i) END;
  END WriteStr;

  PROCEDURE WriteLn*;
  BEGIN WriteStr(Platform.NewLine);  (* Unix/Windows end-of-line *)
  END WriteLn;

BEGIN
  pos := 0;
CLOSE
  Flush;
END Console.
